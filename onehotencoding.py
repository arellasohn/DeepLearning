# -*- coding: utf-8 -*-
"""OneHotEncoding.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SYhkwPxkH4WyEOfDOjD2g1RYNp4xQ-Ld
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""# 1. Data load"""

dataset = pd.read_csv('/content/Iris.csv')
dataset

"""# 2. X와 y 분리
- X는 id열 제외 SepalLength, SepalWidth, PetalLength, PetalWidth 4개의 열 (4개의 특징)
- y는 마지막 열(Species)
"""

iris = dataset.values
X = iris[:,1:-1]
y = iris[:,-1]

"""- y(class label)을 숫자로 변경
- 1) 정수로 변경
- 2) 1,0,0 / 0,1,0 / 0,0,1으로 변경
"""

# LabelEncoder: 문자를 정수로 변경
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
# LabelEncoder.fit: 실제 변형을 실행하는 것이 아니라, 변형을 위한 정보 수집
#                   (각 문자를 어떠한 정수로 변경할 지 결정함)
le.fit(y)
# LabelEncoder.transform: 반드시 fit을 수행한 후에, 사용
#                         실제로 주어진 값을 정수로 변경함
le.transform(y)

y.ndim

# OneHotEncoder: 문자를 0과 1의 조합으로 변형
# 해당 문자 값의 종류만큼 열이 생성됨
# 위의 경우, 총 3개의 문자열이 있으므로, 3개열로 구성된 0과1의 조합으로 변경
from sklearn.preprocessing import OneHotEncoder
ohe = OneHotEncoder()
# OneHotEncoder의 입력은 반드시 2d array여야 함
# y는 1d array이므로 2d array로 변경함
# y.shape = (150,) 이므로 y.shape = (150,1)로 변경함
# y.reshape을 사용
# ndarray.reshape(a,b): ndarray의 shape을 (a,b)로 변경함
ohe.fit(y.reshape(150,1))
# fit은 어떠한 문자를 어떠한 0과 1의 조합으로 변경할지 결정
ohe.transform(y.reshape(150,1)).toarray()
# transform은 반드시 fit 다음에 실행되어야 하며,
# 결과는 ndarray가 아닌 sparse matrix이며, toarray()를 통해 ndarray로 변경할 수 있다.

